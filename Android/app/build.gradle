plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

if (project.getProperty("AG_APP_ID").toString().isEmpty() ||
        project.getProperty("AG_APP_CERTIFICATE").toString().isEmpty()) {
    throw new GradleException("Please configure the Agora ID and Certificate in gradle.properties")
}

android {
    namespace 'io.agora.onetoone'
    compileSdk 33

    defaultConfig {
        applicationId "io.agora.callapi"
        ndk.abiFilters 'arm64-v8a', 'armeabi-v7a'
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "2.1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "AG_APP_ID", "\"${project.getProperty("AG_APP_ID")}\"")
        buildConfigField("String", "AG_APP_CERTIFICATE", "\"${project.getProperty("AG_APP_CERTIFICATE")}\"")
        buildConfigField "String", "IM_APP_KEY", "\"${IM_APP_KEY}\""
    }

    signingConfigs {
        release {
            storeFile new File(rootProject.rootDir.absolutePath + "/keystore.key")
            storePassword "965606"
            keyAlias "agora"
            keyPassword "965606"
        }
    }

    applicationVariants.all {
        variant ->
            variant.outputs.all { output ->
                outputFileName = new File(
                        rootProject.name + "_" +
                        "v" + defaultConfig.versionName + "_" +
                        new Date().format("yyyyMMddHHmm") + "_" +
                        buildType.name + ".apk")
            }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }

    packagingOptions {
        pickFirst 'lib/*/libaosl.so'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation 'com.github.GrenderG:Toasty:1.5.0'
    implementation 'com.orhanobut:logger:2.2.0'

    // rtc
    implementation 'io.agora:authentication:1.6.1'
    implementation 'commons-codec:commons-codec:1.15'

    // callapi
    api project(":lib_callapi")
}